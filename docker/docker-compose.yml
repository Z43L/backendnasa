version: '3.8'

services:
  backend:
    build:
      context: ..
      dockerfile: backend/docker/Dockerfile
    ports:
      - "8000:8000"  # API principal
      - "8001:8001"  # Inferencia en tiempo real
      - "8002:8002"  # API de datos
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./datasets:/app/datasets
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - CUDA_VISIBLE_DEVICES=${CUDA_VISIBLE_DEVICES:-}
    networks:
      - seismic-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  database:
    image: postgis/postgis:15-3.3
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: deformacion_monitor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-seismic2024}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - seismic-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - seismic-network
    restart: unless-stopped

  monitoring:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - seismic-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

volumes:
  postgres_data:
  redis_data:
  prometheus_data:

networks:
  seismic-network:
    driver: bridge